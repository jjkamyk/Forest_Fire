! read & write copy of forest
! take the same p and do the same thing
! plot average probability that the fire goes to the opposite site
! plot size of biggest burnt cluster
! plot probability that the fire hits the opposite edge
  plot should look like ___/'''''
  we have to find the threshold point p*
  and do it for every p from the list

* hoshen - kopelman - hint scipy package -> ndimage measurement label (numpy array)
* biggest cluster - number of trees in the same state, neighbours!

Requirements:
1. a gif or avi of the simulation, at least 3 for 3 values of L=20,30,100
2. plots of:
	1) probability that the fire hits the opposite edge with respect to p
	2) size of biggest burnt cluster with respect to p
	plot 1) x3 L=20,30,100
	plot 2) x1 L=100
	number of p-s (list of probabilities): min. 50
	number of iterations: min. 10
	any preferences of neighbourhood
	4 classes of cells: living, burning, burnt, empty

Suggestions:
1. increasing granularity, the bigger the better
2. different type of neighbourhood for spreading the fire and calculating clusters
3. more plots, more animations
4. wind